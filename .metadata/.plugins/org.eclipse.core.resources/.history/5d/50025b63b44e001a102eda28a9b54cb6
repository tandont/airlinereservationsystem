package com.capgemini.airlinereservationsystem.dao.impl;

import com.capgemini.airlinereservationsystem.dao.UserDAO;
import com.capgemini.airlinereservationsystem.dto.Ticket;
import com.capgemini.airlinereservationsystem.dto.User;

public class UserDAOImpl implements UserDAO {

	@Override
	public User registerUser(User user) {
		String query = "INSERT INTO person_details VALUES (?,?,?,?,?,?)";

		try (Connection conn = DriverManager.getConnection(BusBookingSystem.DB_URL,BusBookingSystem.DB_USER, BusBookingSystem.DB_PASSWORD);
				PreparedStatement pstmt = conn.prepareStatement(query);) {
			pstmt.setInt(1, customer.getCustomerId());
			pstmt.setString(3, customer.getCustomerName());
			pstmt.setString(5, customer.getCustomerEmail());
			pstmt.setString(2, customer.getCustomerPassword());
			pstmt.setLong(4, customer.getCustomerContact());
			pstmt.setString(6, "enduser");
			pstmt.executeUpdate();

		} catch (Exception e) {
			e.printStackTrace();
		}
		return customer;
	}

	@Override
	public User loginUser(Integer userId, String password) {
		String query = "SELECT * FROM person_details where id='" + customerId + "' and password='" + password + "'";

		try (Connection conn = DriverManager.getConnection(BusBookingSystem.DB_URL,BusBookingSystem.DB_USER, BusBookingSystem.DB_PASSWORD);
				PreparedStatement pstmt = conn.prepareStatement(query);
				ResultSet rs = pstmt.executeQuery(query)) {

			Customer user = new Customer();

			if (rs.next()) {
				user.setCustomerId(rs.getInt("id"));
				user.setCustomerName(rs.getString("name"));
				user.setCustomerEmail(rs.getString("email"));
				user.setCustomerPassword(rs.getString("password"));
				user.setCustomerContact(rs.getLong("contact"));
				return user;
			}

		} catch (Exception e) {
			e.printStackTrace();
		}
		return null;
	}

	@Override
	public Boolean updateUser(User user) {
		String query = "UPDATE person_details SET name=?,email=?,password=?,contact=? WHERE id=? and type='enduser'";

		try (Connection conn = DriverManager.getConnection(BusBookingSystem.DB_URL,BusBookingSystem.DB_USER, BusBookingSystem.DB_PASSWORD);
				PreparedStatement pstmt = conn.prepareStatement(query);) {
			pstmt.setString(1, customer.getCustomerName());
			pstmt.setString(2, customer.getCustomerEmail());
			pstmt.setString(3, customer.getCustomerPassword());
			pstmt.setLong(4, customer.getCustomerContact());
			pstmt.setInt(5, customer.getCustomerId());
			pstmt.executeUpdate();
		} catch (Exception e) {
			e.printStackTrace();
		}
		return true;
	}

	@Override
	public Boolean deleteUser(Integer userId) {
		String query = "DELETE FROM person_details WHERE id="+customerId;
		try (Connection conn = DriverManager.getConnection(BusBookingSystem.DB_URL,BusBookingSystem.DB_USER, BusBookingSystem.DB_PASSWORD);
				PreparedStatement pstmt = conn.prepareStatement(query);) {
			pstmt.setInt(1, customerId);
			pstmt.executeUpdate();
		} catch (Exception e) {
			e.printStackTrace();
		}
		return true;
	}

	@Override
	public Ticket bookTicket(Ticket ticket) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Boolean cancelTicket(Integer bookingId, Integer userId) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Ticket getTicketInfo(Integer bookingId) {
		// TODO Auto-generated method stub
		return null;
	}

}
